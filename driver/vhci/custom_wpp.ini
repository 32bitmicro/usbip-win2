FUNC TraceCritical{LEVEL=TRACE_LEVEL_CRITICAL}(FLAGS, MSG, ...);
FUNC TraceError{LEVEL=TRACE_LEVEL_ERROR}(FLAGS, MSG, ...);
FUNC TraceWarning{LEVEL=TRACE_LEVEL_WARNING}(FLAGS, MSG, ...);
FUNC TraceInfo{LEVEL=TRACE_LEVEL_INFORMATION}(FLAGS, MSG, ...);
FUNC TraceVerbose{LEVEL=TRACE_LEVEL_INFORMATION}(FLAGS, MSG, ...);

CUSTOM_TYPE(BUS_QUERY_ID_TYPE, ItemEnum(BUS_QUERY_ID_TYPE) );
CUSTOM_TYPE(DEVICE_RELATION_TYPE, ItemEnum(DEVICE_RELATION_TYPE) );
CUSTOM_TYPE(SYSTEM_POWER_STATE, ItemEnum(SYSTEM_POWER_STATE) );
CUSTOM_TYPE(DEVICE_POWER_STATE, ItemEnum(DEVICE_POWER_STATE) );
CUSTOM_TYPE(vdev_type_t, ItemEnum(vdev_type_t) );
CUSTOM_TYPE(usb_device_speed, ItemEnum(usb_device_speed) );
CUSTOM_TYPE(DEVICE_TEXT_TYPE, ItemEnum(DEVICE_TEXT_TYPE) );

CUSTOM_TYPE(urb_function, ItemListShort(
        URB_FUNCTION_SELECT_CONFIGURATION,
        URB_FUNCTION_SELECT_INTERFACE,
        URB_FUNCTION_ABORT_PIPE,
        URB_FUNCTION_TAKE_FRAME_LENGTH_CONTROL,
        URB_FUNCTION_RELEASE_FRAME_LENGTH_CONTROL,
        URB_FUNCTION_GET_FRAME_LENGTH,
        URB_FUNCTION_SET_FRAME_LENGTH,
        URB_FUNCTION_GET_CURRENT_FRAME_NUMBER,
        URB_FUNCTION_CONTROL_TRANSFER,
        URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER,
        URB_FUNCTION_ISOCH_TRANSFER,
        URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE,
        URB_FUNCTION_SET_DESCRIPTOR_TO_DEVICE,
        URB_FUNCTION_SET_FEATURE_TO_DEVICE,
        URB_FUNCTION_SET_FEATURE_TO_INTERFACE,
        URB_FUNCTION_SET_FEATURE_TO_ENDPOINT,

        URB_FUNCTION_CLEAR_FEATURE_TO_DEVICE,
        URB_FUNCTION_CLEAR_FEATURE_TO_INTERFACE,
        URB_FUNCTION_CLEAR_FEATURE_TO_ENDPOINT,
        URB_FUNCTION_GET_STATUS_FROM_DEVICE,
        URB_FUNCTION_GET_STATUS_FROM_INTERFACE,
        URB_FUNCTION_GET_STATUS_FROM_ENDPOINT,
        URB_FUNCTION_RESERVED_0X0016,
        URB_FUNCTION_VENDOR_DEVICE,
        URB_FUNCTION_VENDOR_INTERFACE,
        URB_FUNCTION_VENDOR_ENDPOINT,
        URB_FUNCTION_CLASS_DEVICE,
        URB_FUNCTION_CLASS_INTERFACE,
        URB_FUNCTION_CLASS_ENDPOINT,
        URB_FUNCTION_RESERVE_0X001D,
        URB_FUNCTION_SYNC_RESET_PIPE_AND_CLEAR_STALL,
        URB_FUNCTION_CLASS_OTHER,

        URB_FUNCTION_VENDOR_OTHER,
        URB_FUNCTION_GET_STATUS_FROM_OTHER,
        URB_FUNCTION_CLEAR_FEATURE_TO_OTHER,
        URB_FUNCTION_SET_FEATURE_TO_OTHER,
        URB_FUNCTION_GET_DESCRIPTOR_FROM_ENDPOINT,
        URB_FUNCTION_SET_DESCRIPTOR_TO_ENDPOINT,
        URB_FUNCTION_GET_CONFIGURATION,
        URB_FUNCTION_GET_INTERFACE,
        URB_FUNCTION_GET_DESCRIPTOR_FROM_INTERFACE,
        URB_FUNCTION_SET_DESCRIPTOR_TO_INTERFACE,
        URB_FUNCTION_GET_MS_FEATURE_DESCRIPTOR,
        URB_FUNCTION_RESERVE_0X002B,
        URB_FUNCTION_RESERVE_0X002C,
        URB_FUNCTION_RESERVE_0X002D,
        URB_FUNCTION_RESERVE_0X002E,
        URB_FUNCTION_RESERVE_0X002F,

        URB_FUNCTION_SYNC_RESET_PIPE,
        URB_FUNCTION_SYNC_CLEAR_STALL,
        URB_FUNCTION_CONTROL_TRANSFER_EX) );

CUSTOM_TYPE(usbuser, ItemListLong(USBUSER_ZERO,USBUSER_GET_CONTROLLER_INFO_0,USBUSER_GET_CONTROLLER_DRIVER_KEY,USBUSER_PASS_THRU,USBUSER_GET_POWER_STATE_MAP,USBUSER_GET_BANDWIDTH_INFORMATION,USBUSER_GET_BUS_STATISTICS_0,USBUSER_GET_ROOTHUB_SYMBOLIC_NAME,USBUSER_GET_USB_DRIVER_VERSION,USBUSER_GET_USB2_HW_VERSION,USBUSER_USB_REFRESH_HCT_REG) );
CUSTOM_TYPE(powermn, ItemListByte(IRP_MN_WAIT_WAKE,IRP_MN_POWER_SEQUENCE,IRP_MN_SET_POWER,IRP_MN_QUERY_POWER) );

CUSTOM_TYPE(usb_descriptor_type, ItemListByte(
        USB_NONE_DESCRIPTOR_TYPE,
        USB_DEVICE_DESCRIPTOR_TYPE,
        USB_CONFIGURATION_DESCRIPTOR_TYPE,
        USB_STRING_DESCRIPTOR_TYPE,
        USB_INTERFACE_DESCRIPTOR_TYPE,
        USB_ENDPOINT_DESCRIPTOR_TYPE,
        USB_DEVICE_QUALIFIER_DESCRIPTOR_TYPE,
        USB_OTHER_SPEED_CONFIGURATION_DESCRIPTOR_TYPE,
        USB_INTERFACE_POWER_DESCRIPTOR_TYPE,
        USB_OTG_DESCRIPTOR_TYPE,
        USB_DEBUG_DESCRIPTOR_TYPE,
        USB_INTERFACE_ASSOCIATION_DESCRIPTOR_TYPE,
        USB_0x0C_DESCRIPTOR_TYPE,
        USB_0x0D_DESCRIPTOR_TYPE,
        USB_0x0E_DESCRIPTOR_TYPE,
        USB_BOS_DESCRIPTOR_TYPE,
        USB_DEVICE_CAPABILITY_DESCRIPTOR_TYPE) );

CUSTOM_TYPE(usb_busif_usbdi_version, ItemListShort(USB_BUSIF_USBDI_VERSION_0, USB_BUSIF_USBDI_VERSION_1, USB_BUSIF_USBDI_VERSION_2, USB_BUSIF_USBDI_VERSION_3) );
